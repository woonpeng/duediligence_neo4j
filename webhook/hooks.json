[
  {
    "id": "cleanup",
    "execute-command": "/opt/neo4j-webhook/cleanup.sh",
    "command-working-directory": "/opt/neo4j-webhook",
    "include-command-output-in-response": true,
    "trigger-rule-mismatch-http-response-code": 403,
    "trigger-rule": {
      "and": [
        {
          "match": {
            "type": "payload-hash-sha256",
            "secret": "",
            "parameter": {
              "source": "header",
              "name": "X-Hub-Signature"
            }
          }
        }
      ]
    }
  },
  {
    "id": "purge",
    "execute-command": "/opt/neo4j-webhook/purge.sh",
    "command-working-directory": "/opt/neo4j-webhook",
    "include-command-output-in-response": true,
    "trigger-rule-mismatch-http-response-code": 403,
    "trigger-rule": {
      "and": [
        {
          "match": {
            "type": "payload-hash-sha256",
            "secret": "",
            "parameter": {
              "source": "header",
              "name": "X-Hub-Signature"
            }
          }
        }
      ]
    }
  },
  {
    "id": "restore",
    "execute-command": "/opt/neo4j-webhook/restore.sh",
    "command-working-directory": "/opt/neo4j-webhook",
    "include-command-output-in-response": true,
    "trigger-rule-mismatch-http-response-code": 403,
    "pass-arguments-to-command": [
      {
        "source": "url",
        "name": "name"
      }
    ],
    "trigger-rule": {
      "and": [
        {
          "match": {
            "type": "payload-hash-sha256",
            "secret": "",
            "parameter": {
              "source": "header",
              "name": "X-Hub-Signature"
            }
          }
        }
      ]
    }
  },
  {
    "id": "backup",
    "execute-command": "/opt/neo4j-webhook/backup.sh",
    "command-working-directory": "/opt/neo4j-webhook",
    "include-command-output-in-response": true,
    "trigger-rule-mismatch-http-response-code": 403,
    "pass-arguments-to-command": [
      {
        "source": "url",
        "name": "name"
      }
    ],
    "trigger-rule": {
      "and": [
        {
          "match": {
            "type": "payload-hash-sha256",
            "secret": "",
            "parameter": {
              "source": "header",
              "name": "X-Hub-Signature"
            }
          }
        }
      ]
    }
  }
]
